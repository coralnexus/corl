en:
  corl:
    errors:
      batch_error: |-
        An issue was encountered during batch processing
    core:
      action:
        options:
          parallel: |-
            Enable parallelism of node action execution (default %{default_value})
          net_remote: |-
            Optional network project remote name to use in updating and storing changes remotely (default %{default_value})
          net_provider: |-
            CORL network provider to use for managing cloud nodes (default %{default_value})
          node_provider: |-
            Default to using a specific node provider but individual node references can override (default %{default_value})
          nodes: |-
            Optional nodes on which to execute this action
        errors:
          network_provider: |-
            Network plugin provider %{value} is not loaded >> Pick from the following: %{choices}
          node_provider: |-
            Node plugin provider %{value} is not loaded >> Pick from the following: %{choices}
          nodes: |-
            Node reference %{value} failed to parse or provider %{provider} isn't loaded (%{name})
      node:
        bootstrap:
          status: |-
            Bootstrap script %{script} failed with status %{status}
      mixin:
        action:
          keypair:
            options:
              private_key: |-
                Optional existing private SSH key to use for SSH communication (new keys are generated by default)
              require_password: |-
                Require and prompt for a password for generated keys (default %{default_value})
              key_type: |-
                Type of SSH key to generate (default %{default_value})
              key_bits: |-
                Strength of generated key encryption in bits (default %{default_value})
              key_comment: |-
                Optional key comment (attached at the end of the public key)
            errors:
              private_key_not_found: |-
                Private key %{value} not found
              private_key_parse_error: |-
                Private key %{value} failed to parse and can not be accepted as a valid private SSH key
              key_type: |-
                SSH key type %{value} not supported >> Pick from the following: %{choices}
              key_bits: |-
                Encryption strength must be greater than %{required} bits (%{value} specified)
              no_password: |-
                Password verification of private key was terminated (verification required to use encrypted SSH keys)             
    actions:
      images:
        options:
          match_case: |-
            Match case on any search terms given when searching for images (default %{default_value})
          require_all: |-
            Require all search terms to be present in image descriptions to be included (default %{default_value})
          provider: |-
            Node provider to retrieve images for
          search: |-
            Optional array of search terms to filter image results
        start: |-
          Retrieving a list of defined images from %{node_provider}
        results: |-
          Total of %{images} images found
      machines:
        options:
          node_provider: |-
            Node provider to retrieve machine types
        start: |-
          Retrieving a list of available machines from %{node_provider}
        results: |-
          Total of %{machines} machine types found
      spawn:
        options:
          parallel: |-
            Enable or disable parallelism of node creation (default %{default_value})
          seed: |-
            CORL project reference with cloud project to seed new machines with (default %{default_value})
          region: |-
            Machine provider region in which to create the machines (defaults to first defined in provider)
          machine_type: |-
            Provider ID of machine type to create (defaults to first defined in provider - usually smallest)
          provider: |-
            Create machines with this node provider
          image: |-
            Provider ID of operating system image on which to initialize the new machines           
          hostnames: |-
            Hostnames of machines to create on provider infrastructure
        start: |-
          Spawning new machines on %{node_provider}
      ssh:
        options:
        errors:
          ssh_nodes_empty: |-
            Nodes must be specified in order to launch a SSH terminal
          ssh_nodes: |-
            Provider %{node_provider} node %{name} is not a valid node to launch terminal (%{value} given)
        start: |-
          Launching terminal for machine %{hostname} (%{id})
        success: |-
          Machine %{hostname} (%{id}) successfully ended terminal session
        failure: |-
          Machine %{hostname} (%{id}) terminal session failed with status %{status}
      bootstrap:
        options:
          bootstrap_path: |-
            Bootstrap script top level local directory (default %{default_value})
          bootstrap_init: |-
            Gateway bootstrap script within the bootstrap project directory (default %{default_value})
          bootstrap_glob: |-
            Path glob to use in searching bootstrap scripts for remote execution (default %{default_value})
          auth_files: |-
            Any additional authorization or state files to pass to the node during bootstrap (relative to local home)
          home_env_var: |-
            Home directory environment variable on remote server (default %{default_value})
          home: |-
            Specified home directory on remote server (default %{default_value})
          bootstrap_nodes: |-
            Node references to bootstrap
        errors:
          bootstrap_path: |-
            Bootstrap path must be an existing directory
          auth_files: |-
            Authorization file %{value} does not exist on the local system
          bootstrap_nodes_empty: |-
            Nodes must be specified in order to run the bootstrap action
          bootstrap_nodes: |-
            Provider %{node_provider} node %{name} is not a valid node to bootstrap (%{value} given)
        start: |-
          Starting bootstrap of machine %{hostname} (%{id})
        success: |-
          Machine %{hostname} (%{id}) successfully bootstrapped
        failure: |-
          Machine %{hostname} (%{id}) bootstrap failed with status %{status}
      exec:
        options:
          command: |-
            Command line executable and arguments to execute on machine
      lookup:
        options:
          context: |-
            Lookup evaluation context; priority, array, hash (default %{default_value})
        errors:
          context: |-
            Lookup evaluation context %{value} is not valid >> Possible contexts: %{choices}
      seed:
        options:
          project_branch: |-
            Project branch to seed project (default %{default_value})
          project_reference: |-
            Reference to seed project (default %{default_value})
        errors:
          project_reference: |-
            Project reference %{value} failed to parse or provider %{provider} isn't loaded >> Possible providers: %{choices}
        start: |-
          Now seeding CORL node
      image:
        start: |-
          Starting image of %{provider} machine %{name} 
      start:
        start: |-
          Starting %{provider} machine %{name} 
      stop:
        start: |-
          Stopping %{provider} machine %{name}
      reboot:
        start: |-
          Rebooting %{provider} machine %{name}
      destroy:
        start: |-
          Destroying %{provider} machine %{name}        
      build:
        start: |-
          Building provisioner project
      provision:
        options:
          dry_run: |-
            Whether or not to build the provisioner catalog without configuring the system (default %{default_value})
        start: |-
          Starting provision run
    vagrant:
      actions:
        init_keys:
          start: |-
            Initializing CORL development keys...
        create_shares:
          start: |-
            Creating CORL specific shares...
        delete_cache:
          start: |-
            Clearing CORL cache for this machine...
            