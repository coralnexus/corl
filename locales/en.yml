en:
  coral:
    errors:
      batch_error: |-
        An issue was encountered during batch processing
    core:
      util:
        cli:
          options:
            help: |-
              Display help information for this command
            log_level: |-
              Set the logging level for this execution run
            encoded: |-
              Optional encoded parameter set that contains default action settings (machine use only)
          parse:
            error: |-
              There was a problem with the command arguments given
        batch:
          unexpected_error: |
            There was a problem with batch %{process}: %{message}
          coral_error: |
            There was a problem with batch %{process}: %{message}
      mixins:
        project:
          options:
            provider: |-
              Coral plugin provider to use for this project (default %{default_value})
            reference: |-
              Project URL or reference string to set as primary remote (default %{default_value})
            revision: |-
              Revision or branch to load (default %{default_value})
        commit:
          options:
            commit: |-
              Commit any uncommitted changes (default %{default_value})
            empty: |-
              Allow commits with no changes (default %{default_value})
            message: |-
              Commit message (defaults to auto generated commit information)
            author: |-
              Author of the changes being committed if different from the committer
            propogate: |-
              Propogate commits throughout the project tree (default %{default_value})
        push:
          options:
            push: |-
              Push changes to remote server (default %{default_value})
            propogate: |-
              Propogate pushes to the remote throughout the project tree (default %{default_value})
            remote: |-
              Remote name to push to (default %{default_value})
            revision: |-
              Branch to push (default %{default_value})
        node:
          options:
            parallel: |-
              Enable parallelism of node action execution (default %{default_value})
            net_provider: |-
              Coral network provider to use for managing cloud nodes (default %{default_value})
            node_provider: |-
              Default to using a specific node provider but individual node references can override (default %{default_value})
            nodes: |-
              Optional nodes on which to execute this action
          errors:
            network_provider: |-
              Network plugin provider %{value} is not loaded >> Pick from the following: %{choices}
            node_provider: |-
              Node plugin provider %{value} is not loaded >> Pick from the following: %{choices}
            nodes: |-
              Node reference %{value} failed to parse or provider %{provider} isn't loaded (%{name})
        keypair:
          options:
            private_key: |-
              Optional existing private SSH key to use for SSH communication (new keys are generated by default)
            require_password: |-
              Require and prompt for a password for generated keys (default %{default_value})
            key_type: |-
              Type of SSH key to generate (default %{default_value})
            key_bits: |-
              Strength of generated key encryption in bits (default %{default_value})
            key_comment: |-
              Optional key comment (attached at the end of the public key)
          errors:
            private_key_not_found: |-
              Private key %{value} not found
            private_key_parse_error: |-
              Private key %{value} failed to parse and can not be accepted as a valid private SSH key
            key_type: |-
              SSH key type %{value} not supported >> Pick from the following: %{choices}
            key_bits: |-
              Encryption strength must be greater than %{required} bits (%{value} specified)
            no_password: |-
              Password verification of private key was terminated (verification required to use encrypted SSH keys)             
      exec:
        help:
          usage: |-
            Usage
          header: |-
            Available actions
          footer: |-
            For help on any individual action run `coral <action> -h`
        errors:
          missing_argument: |-
            Argument <%{name}> must be specified
    actions:
      extract:
        options:
          path: |-
            Base path in which to extract the encoded data
          encoded: |-
            Encoded data to be extracted into the base path
        errors:
          path: |-
            "Base path for extracted files must be an existing directory"
          encoded: |-
            "Data is either not properly encoded or is empty %{value}"
      create:
        options:
          reference: |-
            Git repository URL of Coral cloud to start project from (default %{default_value})
          revision: |-
            Revision or branch to initialize the project with (default %{default_value})
          path: |-
            Project path (default %{default_value})
          start: |-
            Creating a new Coral cloud at %{path} from %{reference}
      add:
        options:
          sub_reference: |-
            Repository URL of Coral component (module or library) to include in the project
          sub_path: |-
            Subproject path
          editable: |-
            Whether or not this sub project should be added as an editable remote (default %{default_value})
        start: |-
          Adding new subproject from %{sub_reference} at %{sub_path}
      remove:
        options:
          sub_path: |-
            Subproject path
        start: |-
          Removing existing subproject at %{sub_path}
      update:
        start: |-
          Starting update run from provider %{project_provider} (ref: %{reference} rev: %{revision})
        provision: |-
          Running provisioning updates on %{node_name} from node provider %{node_provider}
      save:
        options:
          files: |-
            Optional space separated list of files to save
        start: |-
          Saving project changes with provider %{project_provider} (ref: %{reference} rev: %{revision})
      images:
        options:
          match_case: |-
            Match case on any search terms given when searching for images (default %{default_value})
          require_all: |-
            Require all search terms to be present in image descriptions to be included (default %{default_value})
          provider: |-
            Node provider to retrieve images for
          search: |-
            Optional array of search terms to filter image results
        start: |-
          Retrieving a list of defined images from %{node_provider}
        results: |-
          Total of %{images} images found
      machines:
        options:
          node_provider: |-
            Node provider to retrieve machine types
        start: |-
          Retrieving a list of available machines from %{node_provider}
        results: |-
          Total of %{machines} machine types found
      spawn:
        options:
          parallel: |-
            Enable or disable parallelism of node creation (default %{default_value})
          seed: |-
            Coral project reference with cloud project to seed new machines with (default %{default_value})
          region: |-
            Machine provider region in which to create the machines (defaults to first defined in provider)
          machine_type: |-
            Provider ID of machine type to create (defaults to first defined in provider - usually smallest)
          provider: |-
            Create machines with this node provider
          image: |-
            Provider ID of operating system image on which to initialize the new machines           
          hostnames: |-
            Hostnames of machines to create on provider infrastructure
        start: |-
          Spawning new machines on %{provider}
      bootstrap:
        options:
          bootstrap_path: |-
            Bootstrap script top level local directory (default %{default_value})
          bootstrap_init: |-
            Gateway bootstrap script within the bootstrap project directory (default %{default_value})
          bootstrap_glob: |-
            Path glob to use in searching bootstrap scripts for remote execution (default %{default_value})
          auth_files: |-
            Any additional authorization or state files to pass to the node during bootstrap (relative to local home)
          home_env_var: |-
            Home directory environment variable on remote server (default %{default_value})
          home: |-
            Specified home directory on remote server (default %{default_value})
          bootstrap_nodes: |-
            Node references to bootstrap
        errors:
          bootstrap_path: |-
            Bootstrap path must be an existing directory
          auth_files: |-
            Authorization file %{value} does not exist on the local system
          bootstrap_nodes: |-
            Provider %{node_provider} node %{name} is not a valid node to bootstrap (%{value} given)
        start: |-
          Starting bootstrap of machine %{hostname} (%{id})
        success: |-
          Machine %{hostname} (%{id}) successfully bootstrapped
      exec:
        options:
          command: |-
            Command line executable and arguments to execute on machine
      seed:
        options:
          home: |-
            Home directory in which to initialize the deploy SSH keys (default %default_value})
        errors:
          project_reference: |-
            Project reference %{value} failed to parse or provider %{provider} isn't loaded >> Possible providers: %{choices}
